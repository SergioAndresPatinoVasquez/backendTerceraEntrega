paths:
  /api/carts:
    get:
      summary: Este servicio obtiene el listado de los carritos generados en la ecommerce.
      # El tag es un identificador que indica a donde (el recurso) pertenece el servicio
      tags:
        - Carts
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Los carritos fueron obtenidos satisfactoriamente de la BDD.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Carts'
        "401":
          description: Error Unauthorized, debido a que el usuario no ha iniciado sesión.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.
    post:
      summary: Este servicio guarda un nuevo carrito.
      security:
        - bearerAuth: []
      tags:
        - Carts
      responses:
        '200':
          description: Carrito guardado exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Carts'
        '500':
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.

  /api/carts/{cid}: 
    get:
      summary: Este servicio obtiene un sólo carrito a partir de su cid (El identificador del carrito en mongodb).
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: El cid del carrito a buscar
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue obtenido correctamente de nuestra BDD.
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Carts'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.
    put:
      summary: Este servicio actualiza los productos del carrito de acuerdo a su cid.
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: El id del carrito a actualizar
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/UpdateQuantityProductInCartResponse'
      responses:
        "200":
          description: Cantidad del producto en el carrito actualizada.
        "404":
          description: El carrito no fue encontrado en BDD.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.
    delete:
      summary: Este servicio elimina el carrito de acuerdo a su cid.
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: El cid del carrito a eliminar
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue eliminado correctamente
        "404":
          description: El carrito no fue encontrado en BDD.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.

  /api/carts/{cid}/products/{pid}: 
    post:
      summary: Este servicio agrega un producto (pid) de acuerdo al carrito seleccionado (cid).
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: El cid del carrito.
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: El id del producto a agregar.
          schema:
            $type: String
      responses:
        "200":
          description: Producto agregado al carrito exitosamente.
          content:
            application/json:
              schema:
                  $ref: '#components/AddProductInCartResponse'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.
    put:
      summary: Este servicio actualiza la cantidad de un producto (pid) en un carrito (cid).
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: El id del carrito a actualizar
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: El id del producto a actualizar
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/UpdateQuantityProductInCartRequest'
      responses:
        "200":
          description: Productos en el carrito actualizados correctamente en BDD
          schema:
            $ref: '#components/UpdateQuantityProductInCartResponse'
        "404":
          description: El carrito no fue encontrado en BDD.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.
    delete:
      summary: Este servicio elimina un producto del carrito a partir de su pid.
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: El cid del carrito que contiene el producto a eliminar
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: El pid del producto a eliminar.
          schema:
            $type: String
      responses:
        "200":
          description: Producto eliminado exitosamente.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo en la conexión.


components:
  schemas:
    Carts:
      type: Object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                format: uuid
                description: Id del producto
              quantity:
                type: Number
                description: Cantidad de productos en el carrito
      example:
        products:
          - product: '1298720424'
            quantity: 2
  requestBodiesUpdateProductInCar:
    updateProductInCar:
      type: Object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                format: uuid
                description: Id del producto
              quantity:
                type: Number
                description: Cantidad de productos en el carrito
      example:
        products:
          - product: '1298720424'
            quantity: 2
  UpdateQuantityProductInCartRequest:
    type: object
    properties:
      product:
        type: string
        format: uuid
      quantity:
        type: number
        description: Nueva cantidad del producto en el carrito
  UpdateQuantityProductInCartResponse:
    type: object
    properties:
      # agregar propiedades específicas de la respuesta si es necesario
  AddProductInCartResponse:
    type: object
    properties:
      message:
        type: string
        description: Mensaje de éxito
      # agregar más propiedades específicas de la respuesta si es necesario
    example:
      message: 'Producto agregado al carrito exitosamente'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT